# Generated by Django 4.1.3 on 2022-11-16 04:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import posts.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("post_id", models.UUIDField(editable=False)),
                ("reply_to", models.UUIDField(blank=True, null=True)),
                ("content", models.TextField(max_length=200)),
                (
                    "contentType",
                    models.CharField(
                        choices=[
                            ("COMMON_MARK", "text/markdown"),
                            ("UTF_8", "text/plain"),
                            ("BASE_64", "application/base64"),
                            ("PNG_BASE_64", "image/png;base64"),
                            ("JPEG_BASE_64", "image/jpeg;base64"),
                            ("HTML", "text/html"),
                        ],
                        default="text/plain",
                        max_length=500,
                    ),
                ),
                ("published", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("liked_id", models.UUIDField(editable=False)),
                ("is_comment", models.BooleanField(default=False)),
                ("published", models.DateTimeField(auto_now_add=True)),
                (
                    "accepter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_accepter",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes_sender",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("source", models.CharField(blank=True, max_length=500)),
                ("origin", models.CharField(blank=True, max_length=500)),
                ("published", models.DateTimeField(auto_now_add=True)),
                ("description", models.CharField(blank=True, max_length=500)),
                ("unlisted", models.BooleanField(default=False)),
                (
                    "contentType",
                    models.CharField(
                        choices=[
                            ("COMMON_MARK", "text/markdown"),
                            ("UTF_8", "text/plain"),
                            ("BASE_64", "application/base64"),
                            ("PNG_BASE_64", "image/png;base64"),
                            ("JPEG_BASE_64", "image/jpeg;base64"),
                            ("HTML", "text/html"),
                        ],
                        default="text/plain",
                        max_length=500,
                    ),
                ),
                ("content", models.CharField(blank=True, max_length=500)),
                ("file", models.FileField(blank=True, upload_to="files/")),
                ("visibility", models.TextField(max_length=200)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("categories", models.ManyToManyField(blank=True, to="posts.category")),
                ("comments", models.ManyToManyField(blank=True, to="posts.comment")),
                ("likes", models.ManyToManyField(blank=True, to="posts.like")),
            ],
        ),
        migrations.CreateModel(
            name="InboxItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            (posts.models.item_types["post"], 1),
                            (posts.models.item_types["comment"], 2),
                            (posts.models.item_types["like"], 3),
                            (posts.models.item_types["follow"], 4),
                            (posts.models.item_types["unfollow"], 5),
                            (posts.models.item_types["friendrequest"], 6),
                            (posts.models.item_types["friendrequestaccept"], 7),
                            (posts.models.item_types["friendrequestreject"], 8),
                        ],
                        max_length=20,
                    ),
                ),
                ("item_id", models.UUIDField(editable=False)),
                ("published", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inbox",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("items", models.ManyToManyField(to="posts.inboxitem")),
            ],
        ),
        migrations.AddField(
            model_name="comment",
            name="likes",
            field=models.ManyToManyField(blank=True, to="posts.like"),
        ),
        migrations.AddField(
            model_name="comment",
            name="replies",
            field=models.ManyToManyField(blank=True, to="posts.comment"),
        ),
    ]
